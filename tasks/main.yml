---

- name: ensure directory exists
  file:
    path: /root
    state: directory
    owner: root
    group: root
    mode: 0700
  tags:
    - base_gcc

- name: copy goss tests template
  template:
    src: test_gcc.yml.j2
    dest: /root/test_gcc.yml
    mode: 0600
  tags:
    - base_gcc

- name: ensure yum-utils is installed
  package:
    name: yum-utils
    state: present
  register: network_access
  until: network_access is success
  retries: 10
  delay: 2
  when: collections_enabled and ansible_os_family == 'RedHat'
  tags:
    - base_gcc

- name: use new tools on 8
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version|int >= 8
  set_fact:
    development_group: '@development tools'
    collections_enabled: false

- name: use new dts name on 8
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version|int >= 8
  set_fact:
    cplusplus_devtoolset: "gcc-toolset-{{ DTSVER }}"

- name: manage subscription
  when:
    - ansible_distribution == 'RedHat'
    - ansible_distribution_major_version|int >= 8
  command: |
    subscription-manager register \
      --org={{ lookup('env','RH_ORG') }} \
      --activationkey={{ lookup('env','RH_KEY') }} \
      --force
  args:
    creates: /etc/pki/consumer/key.pem

- name: yum install development tools
  when: ansible_os_family == 'RedHat' and development_groupinstall
  yum:
    name: "{{ development_group }}"
    state: "{{ compilers_present }}"
    update_cache: true
  register: network_access
  until: network_access is success
  retries: 3
  delay: 3
  tags:
    - base_gcc

- name: yum install gcc
  when: ansible_os_family == 'RedHat' and not development_groupinstall
  yum:
    name:
      - binutils
      - bison
      - flex
      - gcc
      - gcc-c++
      - gdb
      - glibc-devel
      - libtool
      - make
    state: "{{ compilers_present }}"
    update_cache: true
  register: network_access
  until: network_access is success
  retries: 10
  delay: 2
  tags:
    - base_gcc

- name: install centos software collections
  when:
    - collections_enabled|bool
    - DTSVER|int > 3 or ansible_distribution_major_version|int <= 7
    - ansible_distribution == 'CentOS'
  package:
    name: centos-release-scl
    state: present
  register: network_access
  until: network_access is success
  retries: 10
  delay: 2
  tags:
    - base_gcc

- name: install scientific linux software collections
  when:
    - collections_enabled|bool
    - DTSVER|int == 3
    - ansible_distribution == 'CentOS'
    - ansible_distribution_major_version|int == 6
  get_url:
    url: "{{ cern_repo_file }}"
    dest: /etc/yum.repos.d/slc6-scl.repo
    owner: root
    group: root
  register: network_access
  until: network_access is succeeded
  retries: 10
  delay: 2
  tags:
    - base_gcc

- name: enable rhel software collections
  # yamllint disable-line rule:line-length
  command: "yum-config-manager --enable rhel-server-rhscl-{{ ansible_distribution_major_version }}-rpms"
  when:
    - collections_enabled|bool
    - ansible_distribution == 'RedHat'
    - ansible_distribution_major_version|int < 8
  tags:
    - base_gcc

- name: enable devtoolset-4
  when:
    - collections_enabled|bool
    - DTSVER|int == 4
    - ansible_os_family == 'RedHat'
  command: "yum-config-manager --enable centos-sclo-rh-testing"
  changed_when: false
  tags:
    - base_gcc

- name: configure legacy software collections
  when: collections_enabled and DTSVER|int <= 3
  set_fact:
    cplusplus_dts_rpms:
      - "{{ cplusplus_devtoolset }}-gcc-c++"
    dts_disable_gpg_check: true
  tags:
    - base_gcc
    - test

- name: configure legacy software collection
  when: collections_enabled and DTSVER|int < 6
  set_fact:
    cplusplusrpms:
      - autoconf
      - automake
      - binutils
      - bison
      - git
      - file-devel
      - flex
      - flex-devel
      - make
      - openssl-devel
      - libstdc++-docs
      - ncurses-devel
  tags:
    - base_gcc
    - test

- name: yum install additional tools
  when:
    - ansible_os_family == 'RedHat'
  yum:
    name: "{{ cplusplusrpms }}"
    state: "{{ compilers_present }}"
    skip_broken: true
    update_cache: true
  register: network_access
  until: network_access is success
  retries: 4
  delay: 2
  tags:
    - base_gcc

- name: yum install devtoolset rpms
  yum:
    name: "{{ cplusplus_dts_rpms }}"
    state: "{{ compilers_present }}"
    disable_gpg_check: "{{ dts_disable_gpg_check }}"
  register: network_access
  until: network_access is success
  retries: 10
  delay: 2
  when:
    - ansible_os_family == 'RedHat'
    - (collections_enabled|bool
      and ansible_distribution_major_version|int < 8) or
      (DTSVER|int >= 9
      and ansible_distribution_major_version|int == 8)
  tags:
    - base_gcc

- name: manage subscription
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version|int >= 8
  command: subscription-manager deregister
  args:
    removes: /etc/pki/consumer.key

- name: remove broken sudo from devtoolset for security
  file:
    path: "/opt/rh/{{ cplusplus_devtoolset }}/root/usr/bin/sudo"
    state: absent
  when:
    - collections_enabled
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version|int < 8
  tags:
    - base_gcc

- name: enable devtoolset
  file:
    src: "/opt/rh/{{ cplusplus_devtoolset }}/enable"
    path: /etc/profile.d/devtoolset.sh
    state: link
    mode: 0755
  when:
    - ansible_os_family == 'RedHat'
    - (collections_enabled|bool
      and ansible_distribution_major_version|int < 8) or
      (DTSVER|int >= 9
      and ansible_distribution_major_version|int == 8)
  tags:
    - base_gcc
    - notest

- name: disable devtoolset
  file:
    path: /etc/profile.d/devtoolset.sh
    state: absent
  when:
    - not collections_enabled
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version|int < 8
  tags:
    - base_gcc

- name: source devtoolset enable file
  when:
    - ansible_os_family == 'RedHat'
    - (collections_enabled|bool
      and ansible_distribution_major_version|int < 8) or
      (DTSVER|int >= 9
      and ansible_distribution_major_version|int == 8)
  set_fact:
    cmd_env: "source /opt/rh/{{ cplusplus_devtoolset }}/enable && "
  tags:
    - test
    - base_gcc

- name: disable centos-sclo-rh-testing
  when:
    - collections_enabled|bool
    - DTSVER|int == 4
    - ansible_os_family == 'RedHat'
  command: "yum-config-manager --disable centos-sclo-rh-testing"
  changed_when: false
  tags:
    - base_gcc

- name: disable slc6-scl
  when:
    - collections_enabled|bool
    - DTSVER|int == 3
    - ansible_distribution == 'CentOS'
    - ansible_distribution_major_version|int == 6
  command: "yum-config-manager --disable slc6-scl"
  changed_when: false
  tags:
    - base_gcc

- name: apt install packages for C++ development
  when: ansible_os_family == 'Debian'
  apt:
    pkg: "{{ cplusplusapts }}"
    update_cache: true
    cache_valid_time: 86400
    state: "{{ compilers_present }}"
  register: network_access
  until: network_access is success
  retries: 10
  delay: 2
  tags:
    - base_gcc

- name: what is my compiler?
  shell: "{{ cmd_env | default('') }} gcc --version"
  register: gcc_version
  changed_when: false
  tags:
    - skip_ansible_lint
    - test
    - base_gcc

- name: Display details about gcc version
  debug:
    msg: "{{ gcc_version.stdout_lines[0] }}"
  tags:
    - test
    - base_gcc
